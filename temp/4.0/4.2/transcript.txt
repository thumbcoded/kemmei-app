# Cloud Computing Overview

## Introduction to Cloud Computing

You'll often hear cloud computing described as a server that's simply hosted somewhere else, but in reality, cloud computing provides extensive functionality, and we'll talk about some of those advantages in this video today.

It certainly allows us to take the applications and services that normally we would host in our own data center and host those services anywhere we'd like in the world. One interesting characteristic of cloud computing is that these services are located at many public cloud service providers, which means we have effectively as much CPU, drive space, and network as we could possibly want to use.

Another powerful characteristic of cloud computing is that you can deploy an entire application instance anywhere you'd like at any time by simply pressing a button. This is very different than the old days of physical data centers where you had to purchase a server, wait for that purchase to arrive, unbox the server, put it into a rack, turn it on, install the operating system and the application, and finally connect it to a network just to be able to use that app. With cloud computing, all of this is done in a matter of moments, and you can deploy as much or as little of this as you need.

Of course, as the demand for that app tends to decrease over time, you can remove those resources from the cloud at any moment. Many of these public clouds are located in key geographical areas around the world. That means that you can deploy your app to where it makes the most sense. If more people would use this app in Europe, then you may want to use a Europe-based cloud service provider. If more of your customers are in the United States, you may want to have some US-based cloud services there.

The cloud is also about efficiency. If you only have a particular application that you need during particular times of the year, you can simply spin up those application instances, use that application, and when you're done you can turn off those particular instances. This means that you now have more financial control over how this application is deployed, and you don't have to put up a lot of money upfront just to buy all of this infrastructure. Instead, you simply pay over time by using the cloud.

## Types of Cloud Deployments

### Public Cloud

When most people think about the cloud, they probably think about a public cloud. These would be the cloud infrastructures provided by Microsoft, Amazon, Rackspace, and many other cloud providers. We call these public clouds because you're able to access these clouds publicly from anywhere you happen to be on the internet.

### Private Cloud

A private cloud is a cloud infrastructure that you are running in your own private data center. You would need to purchase all of the equipment and storage required to build that cloud, but once that's in place in your own infrastructure, you can deploy new applications, use the capabilities of these cloud-based infrastructures, but keep all of that information within your control in your private data center.

### Hybrid Cloud

Many organizations use a combination of both of these. They might have a private cloud that they're running their own internal and private apps on, and they might also have a public cloud that they use for deployment and access by other folks on the internet. Both of these are very common implementations, and in many organizations you will see both of these used simultaneously.

### Community Cloud

The idea of purchasing your own cloud and deploying it in your own data center requires a bit of a cash outlay, so some organizations will partner with other organizations that provide a similar set of services and build their own cloud that they can share amongst all of them. This means that these smaller organizations can still take advantage of the technologies that cloud provides, but it doesn't require that enormous cash outlay to begin with.

## Cloud Service Models

Not every cloud implementation is designed in exactly the same way. There are a number of different implementation models that you might find.

### Infrastructure as a Service (IaaS)

One of these is Infrastructure as a Service or IaaS. You might also see this referred to as Hardware as a Service or HaaS. You can think of this as renting time on a piece of hardware that's somewhere in a cloud infrastructure. This means that the cloud provider can provide you with a CPU and storage space, but you would still be responsible for installing operating systems, maintaining the operating system and keeping it up to date, and maintaining the security of the application.

The cloud provider certainly has access to the hardware that you're using, but all of that data that you're storing would be within your control and your control only. This gives you some additional security over other types of cloud deployment models, but it also requires a lot more work to be able to manage and maintain the system.

One common use of an Infrastructure as a Service deployment would be with something like a web service provider. For example, if you're on professormesser.com right now, you're using a cloud-based server that was deployed in an Infrastructure as a Service model. I simply rent time on those systems, but I'm responsible for maintaining the operating system, the applications, and the data.

### Software as a Service (SaaS)

Infrastructure as a Service has a significant management overhead associated with it. On the other side of the spectrum would be Software as a Service or SaaS. Software as a Service is on-demand software. You simply use your username and password, you log into a system usually with a web-based front end, and you're able to take advantage of that particular application.

You don't have to do any type of management of the application. There's no operating system updates, you don't have to manage any software applications or code, and you don't even have to worry about where the data happens to be. All of these requirements are managed by the cloud service provider through the Software as a Service deployment model.

This also means you don't need a big development team to be able to write any applications because the application has already been written for you. With Software as a Service, you would simply log in and use that application, and if there's any updates that need to be made to that application, they are made by the application provider themselves.

A good example of a Software as a Service would be things like Google Mail or Microsoft 365, where you don't have to build the Google Mail infrastructure. You simply use your username and password and you're able to send and receive emails.

### Platform as a Service (PaaS)

A deployment model that's in the middle ground between Infrastructure as a Service and Software as a Service is one we refer to as Platform as a Service or PaaS. Platform as a Service doesn't require you to maintain any operating systems and you don't have to have your own data center, but you do have to work on building the application that will run on this particular platform.

This is an interesting hybrid between the Software as a Service model and the Infrastructure as a Service model because you still have to write the application, but the platform that you're using to write and to run the software is all operating on the platform used by the Platform as a Service provider.

You can think of piecing together different modules of an application in the same way that you might piece together different types of building blocks. You determine how these building blocks are arranged and ultimately what these building blocks will provide for you, but it's your responsibility to put all of these blocks together in a way that makes sense for you. Only you will have access to this application because you built it as part of this Platform as a Service infrastructure.

There are many different Platform as a Service providers that you could choose from on the internet. One of the more popular PaaS providers is from Salesforce.com. Many people know Salesforce as a Software as a Service provider where you simply log in and use their platform, but they also have an extensive development platform that you're able to build your own application to work exactly the way you'd like, and that particular arm of Salesforce.com operates as Platform as a Service.

## Shared Responsibility Model

Many public cloud providers will provide you with a responsibility matrix so that you know exactly what parts of this service are managed by the cloud provider and what parts of this service are the responsibility of you, the customer.

### On-Premises
For example, if you're building out your own cloud services or doing everything on your own premises, effectively everything is your responsibility. You would need to be responsible for the data, the infrastructure, the applications that you're building, the network connectivity, the operating systems themselves, and the physical platform itself.

### Software as a Service (SaaS)
Software as a Service is one where the provider is managing a very large amount of that infrastructure, all the way from the physical data center up through the application itself. You as the customer may want to provide some additional identity and directory infrastructure for authentication. You might want to have your own accounts configured within this Software as a Service platform, and you'll need to provide the computers, the tablets, or the phones that will be used to connect to this SaaS provider.

### Platform as a Service (PaaS)
With Platform as a Service, you as the customer will be responsible for writing your own applications. The PaaS provider will provide you with the platform, and you the customer will begin writing the applications that will run on this platform.

### Infrastructure as a Service (IaaS)
With Infrastructure as a Service, the provider commonly provides the data center, the network connectivity, and the hardware for the CPU and the storage. You as the customer might have the option for installing your own operating system, and as the customer you will be responsible for everything else that is being used on that cloud deployment option.

## Private vs. Public Cloud Deployment

### Private Cloud (Internal Cloud)

Many organizations will build their own private cloud. They have their own data center that they manage themselves. They will purchase their own equipment and their own storage, and they will install and maintain everything themselves. Sometimes you'll see this referred to as an internal cloud or a private cloud.

All of those resources in their private cloud are dedicated for their use only. No one else will be using any of the resources that they have acquired and that they maintain in their own internal cloud infrastructure. There's obviously a significant cash outlay to be able to purchase all of this equipment initially and install it into your data center, but once everything's in place, you no longer have those pay-as-you-go or metered costs associated with a cloud infrastructure. You can use as much of your private cloud as you would like, and there's no additional cloud costs associated with that.

### Public Cloud (External Cloud)

Some organizations prefer not owning any equipment or maintaining any data center and instead will use a cloud that was created by others. In this case, it would be an external cloud or what we often refer to as a public cloud. So if you are using public cloud services on Amazon, on Rackspace, on Microsoft, then all of those cloud services would be considered a public cloud.

There are many other customers that are deploying their own cloud-based services, so both you and those other customers are all sharing the same resources to be able to deploy all of those cloud-based technologies. Obviously in these public clouds, one customer is not able to see any data from another customer, but all of you could be using the same storage drives, the same CPUs, and the same network as every other customer in that public cloud.

Although you didn't have to pay for any additional costs up front to put together this cloud, you still have to pay for the resources that you're using. Some cloud providers charge you a fixed rate per month, or they might charge as you go in more of a metered pricing. So your organization will need to determine if a private cloud might be something worth investing in or if a public cloud might be a better option.

## Cloud Pricing Models

For many organizations, costs are certainly an important consideration, and with cloud services you could be billed differently depending on the cloud provider and the service that you're using.

### Metered Utilization

You may find that some of your cloud services are billed back to you using metered utilization. This means that you as the customer are paying for how much of these resources you are using. So if you're paying to have traffic uploaded to you inside of this cloud, all of that traffic would be ingress traffic, and there may be a cost associated with every byte that you would transfer of that ingress traffic.

There's probably also a cost to store the data on the storage drives of that cloud-based service. If customers are downloading information from your cloud services, then you are sending that information to the user, and all of that information would be priced on the egress traffic costs. If customers are downloading information from your cloud services, then you are sending all of that traffic out, or it would be egress traffic, and there might be a different cost for egress traffic versus ingress traffic.

At the end of the month, all of these costs are added up and they provide you with an invoice of what you would need to pay for that month. If you have a very busy month, then you probably are paying more than if it's a slower month because it is a metered utilization or based on how much you're using.

### Non-Metered Pricing

On the consumer side, we tend to see a lot of cloud-based services priced on a non-metered basis. This means that it is a fixed price for a certain amount of resources, and those services generally charge you based on the maximum amount of storage that you could use. For example, you might pay a certain amount for 2 GB of storage in the cloud, and no matter how much you upload or how much you download, you're always paying the same amount every month for that maximum block of storage.

## Key Cloud Characteristics

### Elasticity and Scalability

One of the most useful characteristics of cloud computing is the ability to scale up or scale down at any time. This means as customers or applications become more active, you can scale up your infrastructure to be able to handle that load, and perhaps at different times of the year when things get a little bit slower, you can scale down your infrastructure so you're only paying for what you need. Of course, you're able to make these changes at any time and very often automatically, so it would not be unusual for you to push a button and instantly deploy a new application instance to be able to handle the additional load. We refer to this ability to instantly scale up or scale down based on the load as elasticity.

### High Availability

Another very appealing characteristic of cloud technologies is that it always seems to be available. This ability to maintain uptime and availability is an important characteristic for any infrastructure, but with cloud-based technologies there are many redundancies in place across many different data centers. This means if one data center is having problems with a particular drive array or with a network connection, that other parts of that infrastructure can pick up the load. In very extreme cases, some of these cloud providers will have completely separate data centers and they can move everyone from one data center to the other to maintain that uptime.

### File Synchronization and Geographic Distribution

The cloud also allows us to appear to be everywhere all at once. This means that we can have a database that we're maintaining here in North America and be able to have that information automatically duplicated to other data centers around the world. Sometimes this file synchronization is something built into the application and is maintained by the customer, but some cloud infrastructures will automatically synchronize this data behind the scenes, especially if they need to move you from one data center to another.

### Multi-Tenancy

To be able to get the best efficiency for the infrastructure that's been installed in these cloud-based data centers, we need to have many customers using all of this equipment all the time. We refer to this characteristic as multi-tenancy. That means there are many different tenants effectively living in that cloud infrastructure, and they are all working and operating simultaneously across all of those resources.

There are obviously technologies, processes, and procedures in place to maintain separation between all of these different customers, but by having all of these customers use all of these cloud-based services simultaneously, the cloud provider can provide an efficiency in technology and an efficiency in cost.
