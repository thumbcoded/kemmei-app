0:01
DNS stands for the domain name system
0:04
and this is one of the most critical
0:06
resources and services available on our
0:09
networks that's because we use DNS to be
0:11
able to provide IP addresses when all we
0:15
remember is a fully qualified domain
0:17
name for example you could type into
0:19
your browser
0:20
www.professormesser.com
0:22
and behind the scenes a DNS resolution
0:25
occurs that translates the name www.
0:29
professor
0:31
into the IP address that is associated
0:33
with that particular web server address
0:36
this means that we don't have to
0:37
remember any specific IP addresses all
0:40
we have to remember is the name of the
0:42
server that we want to communicate to
0:44
behind the scenes DNS will make sure
0:46
that we're able to connect to that IP
0:48
address DNS provides this resolution and
0:51
many other features as well some of
0:54
which we'll learn about in this video
0:55
today this DNS database is a hierarchy
0:58
that allows us to find the IP address of
1:01
any fully qualified domain name on the
1:03
worldwide internet we refer to DNS as a
1:07
distributed database because this is a
1:09
database that is scattered throughout
1:11
the entire internet portions of this
1:14
database are contained on different
1:16
servers located on different networks
1:18
around the world if we were to drill
1:20
down on the specifics of the DNS
1:22
standard you would see that there were
1:23
13 separate root server clusters this
1:26
cluster is more than simply 13 separate
1:28
servers in reality there are over a
1:31
thousand servers making up that root
1:33
server cluster that root cluster allows
1:36
us to then communicate with DNS servers
1:38
that are handling top level domains
1:40
these generic top level domains or gtlds
1:43
are the ones that you might recognize
1:45
a.com a.org a.net and so on you might
1:49
also see these top level domains
1:50
separated by country there are about 275
1:53
country codes for example the United
1:55
States is the US domain Canada isca the
1:59
United kingdoms. and so on when we say
2:03
that the DNS database is a hierarchy
2:06
this is a visual representation of what
2:08
we mean underneath the top level domains
2:11
is a domain name such as
2:12
professormesser.com and you'll notice
2:14
there's the doom and just under the do
2:17
com is theprofessor Messer you can
2:20
continue to add layers to this hierarchy
2:22
for example our web server at Professor
2:24
Messer is
2:26
www.professormesser.com
2:28
we might also a mail.
2:31
professormesser.com and so on and of
2:33
course you could have individual servers
2:36
and devices underneath those domain
2:38
names as well so you could have a katy.
2:41
east. professormesser.com or a judy.
2:44
west. professormesser.com this allows
2:47
you to organize your DNS infrastructure
2:50
into a way that makes sense for your
2:51
organization and have it accessible to
2:54
anyone in the world if you wanted to get
2:57
some insight into how a particular DNS
3:00
server might be configured you might
3:01
want to use different tools to be able
3:03
to access that database one of these
3:06
tools is the Dig command dig is a common
3:09
command on Linux and Mac OS and some
3:11
versions of Windows also have a dig
3:14
version that you could install dig
3:16
allows you to perform a query against a
3:18
DNS server so if we dig
3:21
www.professormesser.com we get the
3:24
results that are on this page it shows
3:26
us what commands we are using gives us
3:28
exactly what question is being asked of
3:31
that particular DNS server and then
3:33
provides answers to the question that
3:34
was asked in this case making a query
3:37
for www.professorpuzzle.com
3:59
remaining IP addresses to communicate to
4:02
our web server if you're on Windows you
4:04
can use the NS lookup command to provide
4:06
the same information for example
4:08
nslookup of professormesser.com will
4:11
return the same answers with the same
4:13
three IP
4:14
addresses when we make that query to the
4:17
DNS server we are returned information
4:19
that is contained within the records of
4:21
that DNS database those records are
4:24
referred to as resource records or RR
4:27
those resource records contain
4:28
information about the IP addresses we'd
4:31
like to query their certificate
4:32
information email details host Alias
4:35
names and much more this is one of the
4:38
reasons that we often say that a DNS
4:40
configuration is not something you
4:41
should toy around with if you're not
4:43
familiar with what you're doing one
4:45
mistake made to the database inside this
4:47
DNS server could cause one or more of
4:50
your devices to suddenly become
4:52
unavailable to anyone else on the
4:54
internet if you are going to make a
4:56
change to a DNS server just keep in mind
4:58
that you should always a backup and a
5:00
way to easily revert to that backup if
5:03
you run into any
5:04
problems if you manage your own DNS
5:07
server then this will probably look
5:08
familiar this is a configuration of a
5:11
DNS server you can see there is an SOA
5:14
record at the top an MX record some a
5:17
records along with that and C Name
5:20
Records also at the bottom in this video
5:22
we'll go through each of these different
5:24
record types so that you'll be familiar
5:26
with why we would add that information
5:28
into our DNS server config my DNS Server
5:32
doesn't provide me with a way to look at
5:34
the raw text configuration file but
5:37
there is a web-based front end that I
5:39
can view so this is the same information
5:41
but it's from a web front end for my DNS
5:44
server from this webbased front end I
5:46
could add new records I can modify the
5:48
records that are already here or make
5:50
any changes that I need to in my DNS
5:54
configuration one of the most common
5:56
records in a DNS server is an a record
5:58
you might also see these as a quad a
6:01
record or
6:02
AAAA record these are records that
6:05
Define the IP address for particular
6:08
host name if you're adding or modifying
6:10
an a record that address record is used
6:13
for IP version 4 addresses if you're
6:15
modifying a quad a record that record is
6:18
being used for IP version 6 addresses to
6:21
be able to see what this might look like
6:23
in a configuration file I have a record
6:25
here for my web server www. professor
6:30
this is an internet address or IP
6:32
version for address and the a specifies
6:35
that this is an address record and the
6:37
other part of this record shows it to be
6:40
16259 2461 164 that is the IP address
6:45
that I would like return to an in user
6:47
if they request it for
6:50
www.professormesser.com so if someone
6:52
sends a request to a DS server and asks
6:55
what's the IP address of
6:57
www.professormesser.com this record is
7:00
accessed and it provides the answer of
7:03
16259
7:06
24664 if you're not editing a DNS serers
7:09
text based configuration file then you
7:11
might be adding a record through the
7:12
web-based front end like I do I'm adding
7:15
an a record the name of the host is www
7:18
the IP address is 16259 2461 164 and the
7:23
time to live which is how long someone
7:25
will remember this IP address is set to
7:28
15 minutes after after 15 minutes this
7:30
record will time out from a user's
7:32
workstation and they will need to
7:34
request that IP address to continue
7:36
communicating to
7:38
www.professormesser.com this allows me
7:41
to make changes to this IP address at
7:43
any time and I know that all of those
7:45
changes will eventually be rolled out
7:47
across the internet in no more than 15
7:50
minutes the process for adding a quad a
7:52
record is very similar we specify a quad
7:55
a record the name of the device the IP
7:57
version 6 address that we'd like to use
7:59
and the time to live that we would like
8:01
associated with that
8:03
record there may be times when a
8:06
particular server is referenced using
8:08
different names for example you might
8:10
have one server that's used as a web
8:12
server that might also be your DNS
8:14
server it might also be an ntp server
8:17
and it also might be a mail server but
8:19
instead of referencing that server with
8:21
a single name we can use different names
8:23
to associate the different resources for
8:26
example if you have a server called
8:27
mail. example.com
8:29
you might also want to use canonical
8:32
names or cames for that server for chat
8:36
FTP and www this means every time
8:39
somebody references chat. example.com
8:43
ftp.com or
8:46
www.example.com they're all really
8:48
communicating to a single server called
8:50
mail. example.com this makes it very
8:54
easy to administer if you ever need to
8:55
change the IP address of mail.
8:57
example.com you simply change the a
9:00
record for mail. example.com and all of
9:03
the canonical records can stay exactly
9:05
the
9:07
same one of the most critical records on
9:09
any DNS server has got to be the MX
9:12
records this stands for the mail
9:14
exchanger records and these make sure
9:17
that you're able to both send and
9:18
receive email messages from your domain
9:21
the MX record itself is relatively
9:23
straightforward it starts with an in in
9:25
for the internet MX stands for the mail
9:28
exchanger record and then you simply
9:30
have the name of the mail server in this
9:33
case it's mail. example.com when other
9:36
mail servers need to send an email
9:38
message to James professormesser.com
9:40
they reference my mail server to see
9:43
where the MX record is determine the
9:45
name of the mail server then perform
9:47
another lookup to determine the address
9:50
record for that mail server and now they
9:52
know exactly what IP address they should
9:54
be sending that email to in this
9:56
particular case that remote email server
9:58
would reference our DNS they would see
10:00
that there is an MX record specifying
10:02
mail. example.com then they would look
10:04
at the address records and see that
10:06
mail. example.com is
10:10
12324 41 each domain has its own set of
10:14
MX records here's another MX record I
10:16
use for a different domain name this is
10:19
one that I use through this web-based
10:21
front end the name of the host is mail
10:23
and the target name is mail. hover.com
10:27
doc. hosted email
10:30
by using this front end I'm able to make
10:32
changes to that MX record to be able to
10:34
send mail exactly where I need it to go
10:37
if you're configuring your MX record
10:39
through a web-based front end then it's
10:41
the same editing process we've already
10:43
used where we would choose the name of
10:45
the record specify the host name the
10:47
target name and the time to
10:50
live so far we've talked a lot about IP
10:53
addresses fully qualified domain names
10:55
and the resolution between those two in
10:57
our DNS server but we can also use our
11:00
DNS server to store important
11:02
information that we would like others to
11:04
be able to access we refer to these
11:06
records as text records or txt records
11:10
these are human readable text records
11:12
that anyone could reference from our DNS
11:15
server and we'll look at an example of
11:17
those in just a moment sometimes you'll
11:19
see these DNS records being used for
11:21
verification often you'll be configuring
11:24
an email setting and the email
11:26
configuration needs to ensure that you
11:28
have control of your DNS server and to
11:31
be able to verify that you add a special
11:33
text record into your DNS that they can
11:36
then access from their site and there
11:38
are a number of text records that we use
11:40
to minimize the instance of spam and
11:43
we'll talk more about those specific
11:44
text messages as well if you wanted to
11:47
view the text records available on my
11:48
DNS server you can use the Dig command
11:51
with a dig professormesser.com and then
11:54
specify txt it will then show you all of
11:57
the different text messages that are
11:58
currently configured on my DNS server in
12:01
this example there are two text records
12:03
that appear one for a stripe
12:05
verification and another one that's
12:06
being used as an SPF record and we'll
12:10
look more at SPF records in just a
12:11
moment you can also use the NS lookup
12:14
command to view these text records let's
12:16
look at all of the text records
12:18
associated with the Google DNS we would
12:20
use NS lookup dype equals txt and then
12:26
google.com all of the results that you
12:28
see here are the text records associated
12:30
with the google.com domain name I
12:34
mentioned earlier that we often use
12:35
these text records to be able to
12:37
minimize the amount of spam that someone
12:39
might receive or to be able to verify
12:42
that the email messages that have been
12:43
sent really did come from your domain
12:46
one of the ways we do this is with a
12:48
dcam record a domain Keys identified
12:51
mail record if you were to look at the
12:54
text records on a DNS server you may see
12:56
one text record that specifies D equal D
13:00
kimim that is a domain Keys identified
13:03
mail record in the DNS server itself
13:06
you'll find a public key associated with
13:09
this record on your email server is the
13:12
associated private key of this key pair
13:15
all of the outgoing messages from The
13:17
Professor Messer website are digitally
13:19
signed with my private key when another
13:22
mail server receives an email that I
13:24
have sent it sees that that message has
13:26
been digitally signed it then can refer
13:29
refer to my public DNS server to
13:31
retrieve the public key and then verify
13:34
that the digital signature is indeed
13:36
valid this means the recipient knows
13:38
that that message really was sent from
13:41
my official email server if you were to
13:44
look at the configuration on a webbased
13:45
front end it looks very similar with the
13:47
text based host name which is usually
13:50
provided by your email server and then
13:52
you can find the actual content which is
13:55
the public key that you would put into
13:57
that message this can also be config
13:59
from a web-based front end by adding the
14:01
dkim parameters as the host name and
14:04
then in the text part of the field you
14:06
would add the public key as that
14:08
structured content and in this case I'm
14:10
specifying a 15-minute time to
14:13
live it's very common for an
14:15
organization to send email from many
14:18
different resources there might be a
14:20
private internal email server that's
14:22
being used for outgoing mail there might
14:24
also be a third party that's used to
14:26
send bulk email messages perhaps once a
14:28
day or once a week and there needs to be
14:31
a way that everyone can trust that all
14:33
of those different email servers are
14:35
legitimate and have been configured
14:37
specifically to send messages on my
14:40
behalf the way that we would provide
14:42
that information is through a text
14:44
record that contains sender policy
14:46
framework or SPF information this SPF
14:49
record allows us to put all of the email
14:52
servers that we use this means if your
14:54
email server receives a message from
14:57
professormesser.com
14:59
it can look at that message to see what
15:01
the origination server was and then
15:03
verify that that origination server is
15:05
listed in our list of SPF allowed hosts
15:09
if you receive a message from
15:11
professor.com and the origination email
15:14
server is not in this list then you've
15:16
probably received a message from a third
15:19
party that is not associated with our
15:21
domain and adding a text record for SPF
15:24
is very similar to adding any other type
15:26
of text record we would specify the
15:28
record type as txt in the case of an SPF
15:31
record the host name would be all hosts
15:33
or the at sign and the content is listed
15:36
here with the appropriate outgoing email
15:38
server
15:40
name this means any email server that is
15:43
receiving a message can perform a number
15:45
of different checks for the validity of
15:48
that message it can perform an SPF check
15:50
to confirm that it really did come from
15:52
a trusted server and it can check the
15:54
digital signature using the public key
15:57
located in the dkim text record but what
16:00
if one or both of these tests is invalid
16:03
what if this message did not originate
16:05
from a trusted email server for that
16:07
domain and what if it did not have a
16:09
valid digital signature in that case the
16:12
receiver of that email message needs to
16:14
make a decision on what to do with that
16:16
email is this email thrown out
16:18
completely is the email allowed to
16:20
continue through to the in user or is it
16:23
placed in a Spam or quarantine folder by
16:25
default it would be nice if I could tell
16:28
the receiving server that if you receive
16:30
any messages from me that don't validate
16:32
with a proper mail server or they don't
16:35
validate with a proper digital signature
16:37
that those mail messages should be
16:39
dropped and not sent to the user or I
16:42
might have a different policy that says
16:43
Don't remove that particular email
16:45
message but send it into the spam folder
16:48
and let the user make a decision on
16:50
whether that is a legitimate email or
16:52
not the way that we're able to let that
16:54
recipient of the email message know our
16:57
policy is through the use of a DeMark or
17:00
domain-based message authentication
17:02
reporting and conformance record this is
17:05
a text record that allows us the domain
17:07
owner to determine what happens with
17:09
messages that are identified as spam but
17:12
have our domain associated with them
17:14
third parties can look at this record on
17:16
our DNS server and see that we would
17:18
either like to allow all messages to be
17:20
accepted send those messages to a spam
17:23
folder or simply reject the email
17:25
completely we can also include an email
17:28
address with that DeMark record so that
17:30
the disposition of that particular
17:33
message is sent to a central reporting
17:35
tool that means that we can create a
17:37
report showing how many of our email
17:39
messages got through and how many email
17:41
messages were identified as spam here's
17:44
an example of a text record that
17:46
contains the DeMark information in this
17:48
particular case we're telling anyone
17:50
that receives a message that did not
17:52
validate properly to put that message
17:54
into their quarantine folder or spam
17:57
folder and take the results of that
17:59
particular disposition and send it to
18:01
the email address listed here to be able
18:03
to compile it into a larger report later
18:06
on